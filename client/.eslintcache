[{"/Users/nanggo/Documents/git/node-boiler-plate/client/src/reportWebVitals.js":"1","/Users/nanggo/Documents/git/node-boiler-plate/client/src/index.js":"2","/Users/nanggo/Documents/git/node-boiler-plate/client/src/App.js":"3","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/RegisterPage/RegisterPage.js":"4","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/Footer/Footer.js":"5","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/LandingPage/LandingPage.js":"6","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/LoginPage/LoginPage.js":"7","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/NavBar/NavBar.js":"8","/Users/nanggo/Documents/git/node-boiler-plate/client/src/_reducers/index.js":"9","/Users/nanggo/Documents/git/node-boiler-plate/client/src/_actions/user_action.js":"10","/Users/nanggo/Documents/git/node-boiler-plate/client/src/_reducers/user_reducer.js":"11","/Users/nanggo/Documents/git/node-boiler-plate/client/src/_actions/types.js":"12","/Users/nanggo/Documents/git/node-boiler-plate/client/src/hoc/Auth.js":"13","/Users/nanggo/Documents/git/node-boiler-plate/client/src/Config.js":"14","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/NavBar/Sections/RightMenu.js":"15","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/NavBar/Sections/LeftMenu.js":"16","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/UploadProductPage/UploadProductPage.js":"17","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/utils/FileUpload.js":"18"},{"size":362,"mtime":1608658085887,"results":"19","hashOfConfig":"20"},{"size":1072,"mtime":1609685421438,"results":"21","hashOfConfig":"20"},{"size":1304,"mtime":1609728159125,"results":"22","hashOfConfig":"20"},{"size":6780,"mtime":1609687347199,"results":"23","hashOfConfig":"20"},{"size":428,"mtime":1609685199609,"results":"24","hashOfConfig":"20"},{"size":486,"mtime":1609686719786,"results":"25","hashOfConfig":"20"},{"size":5835,"mtime":1609685199610,"results":"26","hashOfConfig":"20"},{"size":1344,"mtime":1609685199611,"results":"27","hashOfConfig":"20"},{"size":154,"mtime":1609343640683,"results":"28","hashOfConfig":"20"},{"size":1066,"mtime":1609686073203,"results":"29","hashOfConfig":"20"},{"size":539,"mtime":1609685199609,"results":"30","hashOfConfig":"20"},{"size":166,"mtime":1609685199608,"results":"31","hashOfConfig":"20"},{"size":1370,"mtime":1609688427351,"results":"32","hashOfConfig":"20"},{"size":148,"mtime":1609677600529,"results":"33","hashOfConfig":"20"},{"size":1279,"mtime":1609728365587,"results":"34","hashOfConfig":"20"},{"size":732,"mtime":1609678505142,"results":"35","hashOfConfig":"20"},{"size":1948,"mtime":1609744175133,"results":"36","hashOfConfig":"20"},{"size":1360,"mtime":1609780769282,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"onyvv3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/nanggo/Documents/git/node-boiler-plate/client/src/reportWebVitals.js",[],["79","80"],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/index.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/App.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/RegisterPage/RegisterPage.js",["81","82"],"import React from 'react';\nimport moment from 'moment';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport {userRegister} from '../../../_actions/user_action';\nimport {useDispatch} from 'react-redux';\n\nimport {Form, Input, Button} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: {span: 24},\n    sm: {span: 8},\n  },\n  wrapperCol: {\n    xs: {span: 24},\n    sm: {span: 16},\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: '',\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().required('Name is required'),\n        lastName: Yup.string().required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required'),\n      })}\n      onSubmit={(values, {setSubmitting}) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`,\n          };\n\n          dispatch(userRegister(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push('/login');\n            } else {\n              alert(response.payload.err.errmsg);\n            }\n          });\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form\n              style={{minWidth: '375px'}}\n              {...formItemLayout}\n              onSubmit={handleSubmit}\n            >\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Email\"\n                hasFeedback\n                validateStatus={\n                  errors.email && touched.email ? 'error' : 'success'\n                }\n              >\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item\n                required\n                label=\"Password\"\n                hasFeedback\n                validateStatus={\n                  errors.password && touched.password ? 'error' : 'success'\n                }\n              >\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button\n                  onClick={handleSubmit}\n                  type=\"primary\"\n                  disabled={isSubmitting}\n                >\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default RegisterPage;\n","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/Footer/Footer.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/LandingPage/LandingPage.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/LoginPage/LoginPage.js",["83","84"],"import React, {useState} from 'react';\nimport {withRouter} from 'react-router-dom';\nimport {userLogin} from '../../../_actions/user_action';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport {Form, Input, Button, Checkbox, Typography} from 'antd';\nimport Icon from '@ant-design/icons';\nimport {useDispatch} from 'react-redux';\n\nconst {Title} = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem('rememberMe') ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('');\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem('rememberMe')\n    ? localStorage.getItem('rememberMe')\n    : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, {setSubmitting}) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n          };\n\n          dispatch(userLogin(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push('/');\n              } else {\n                setFormErrorMessage('Check out your Account or Password again');\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again');\n              setTimeout(() => {\n                setFormErrorMessage('');\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{width: '350px'}}>\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={\n                    <Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}} />\n                  }\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={\n                    <Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}} />\n                  }\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password\n                      ? 'text-input error'\n                      : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label>\n                  <p\n                    style={{\n                      color: '#ff0000bf',\n                      fontSize: '0.7rem',\n                      border: '1px solid',\n                      padding: '1rem',\n                      borderRadius: '10px',\n                    }}\n                  >\n                    {formErrorMessage}\n                  </p>\n                </label>\n              )}\n\n              <Form.Item>\n                <Checkbox\n                  id=\"rememberMe\"\n                  onChange={handleRememberMe}\n                  checked={rememberMe}\n                >\n                  Remember me\n                </Checkbox>\n                <a\n                  className=\"login-form-forgot\"\n                  href=\"/reset_user\"\n                  style={{float: 'right'}}\n                >\n                  forgot password\n                </a>\n                <div>\n                  <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    style={{minWidth: '100%'}}\n                    disabled={isSubmitting}\n                    onSubmit={handleSubmit}\n                  >\n                    Log in\n                  </Button>\n                </div>\n                Or <a href=\"/register\">register now!</a>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default withRouter(LoginPage);\n","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/NavBar/NavBar.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/_reducers/index.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/_actions/user_action.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/_reducers/user_reducer.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/_actions/types.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/hoc/Auth.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/Config.js",[],["85","86"],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/NavBar/Sections/RightMenu.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/NavBar/Sections/LeftMenu.js",[],"/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/views/UploadProductPage/UploadProductPage.js",["87","88","89","90"],"import React, {useState} from 'react';\nimport {Typography, Form, Input, Button} from 'antd';\nimport FileUpload from '../../utils/FileUpload';\n\nconst {Title} = Typography;\nconst {TextArea} = Input;\nconst Continents = [\n  'Africa',\n  'South America',\n  'North America',\n  'Asia',\n  'Europe',\n  'Antarctica',\n  'Australia',\n];\n\nfunction UploadProductPage() {\n  const [Name, setName] = useState('');\n  const [Description, setDescription] = useState('');\n  const [Price, setPrice] = useState(0);\n  const [Continent, setContinent] = useState(1);\n  const [Images, setImages] = useState([]);\n\n  const nameChangeHandler = event => setName(event.currentTarget.value);\n\n  const descriptionChangeHandler = event =>\n    setDescription(event.currentTarget.value);\n\n  const priceChangeHandler = event => setPrice(event.currentTarget.value);\n\n  return (\n    <div style={{maxWidth: '700px', margin: '2rem auto'}}>\n      <div style={{textAlign: 'center', marginBottom: '2rem'}}>\n        <Title level={2}>여행 상품 업로드</Title>\n      </div>\n      <Form>\n        {/* dropzone */}\n        <FileUpload />\n        <br />\n        <br />\n        <label>이름</label>\n        <Input onChange={nameChangeHandler} value={Name}></Input>\n        <br />\n        <br />\n        <label>설명</label>\n        <TextArea\n          onChange={descriptionChangeHandler}\n          value={Description}\n        ></TextArea>\n        <br />\n        <br />\n        <label>가격($)</label>\n        <Input\n          type=\"number\"\n          onChange={priceChangeHandler}\n          value={Price}\n        ></Input>\n        <br />\n        <br />\n        <select>\n          {Continents.map((continent, index) => (\n            <option key={index} value={continent}>\n              {continent}\n            </option>\n          ))}\n        </select>\n        <br />\n        <br />\n        <Button type=\"submit\">확인</Button>\n      </Form>\n    </div>\n  );\n}\n\nexport default UploadProductPage;\n","/Users/nanggo/Documents/git/node-boiler-plate/client/src/components/utils/FileUpload.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":84,"column":11,"nodeType":"97","messageId":"98","endLine":84,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":89,"column":11,"nodeType":"97","messageId":"98","endLine":89,"endColumn":22},{"ruleId":"95","severity":1,"message":"96","line":77,"column":11,"nodeType":"97","messageId":"98","endLine":77,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":82,"column":11,"nodeType":"97","messageId":"98","endLine":82,"endColumn":22},{"ruleId":"91","replacedBy":"100"},{"ruleId":"93","replacedBy":"101"},{"ruleId":"95","severity":1,"message":"102","line":21,"column":10,"nodeType":"97","messageId":"98","endLine":21,"endColumn":19},{"ruleId":"95","severity":1,"message":"103","line":21,"column":21,"nodeType":"97","messageId":"98","endLine":21,"endColumn":33},{"ruleId":"95","severity":1,"message":"104","line":22,"column":10,"nodeType":"97","messageId":"98","endLine":22,"endColumn":16},{"ruleId":"95","severity":1,"message":"105","line":22,"column":18,"nodeType":"97","messageId":"98","endLine":22,"endColumn":27},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.",["106"],["107"],"'Continent' is assigned a value but never used.","'setContinent' is assigned a value but never used.","'Images' is assigned a value but never used.","'setImages' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]